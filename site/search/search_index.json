{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ZooBerry Docs","text":"<p>ZooBerry Docs is a reference and tutorial site for Zoo Tycoon 1 modders. Our site offers detailed information on game configuration files and modding tutorials.</p> <p>Although we only have reference pages for Zoo Tycoon 1 modders, we are always interested in expanding into Zoo Tycoon 2 as well. If you have tutorials or reference guides to contribute, please feel free to submit a pull request at https://github.com/GoosiferIO/ZooBerry-Docs or shoot us a message on Discord.</p>"},{"location":"attributions/","title":"Attributions","text":"<p>Zoo Tycoon modding has existed for as long as the first game was around. All of the information on this website is an amalgamation of just about two decades-worth of modding knowledge. The following is a list of people who can be attributed as having contributed any information or support in some fashion.</p> <ul> <li>Jay  </li> <li>Fern  </li> <li>Khaydar  </li> <li>Serpyderpy  </li> <li>Goosifer   </li> </ul>"},{"location":"emu/emu_console/","title":"Command Console","text":"<p>The API includes a command console not originally available in the vanilla game. It can be accessed via <code>CTRL + J</code>. Commands will not run unless a zoo is loaded.</p> <p>Console limitations to consider as of EMU v1.0.0-alpha.5:  </p> <ul> <li>The console is only visible in windowed mode and will not be accessible if you are full screen.  </li> <li>Safety checks are not yet implemented so be careful to stray too far from the expected input.  </li> <li>Console stays ontop of the main game window (in windowed mode) and will stay ontop of other windows if game is minized. If it's obtrusive, close the console with <code>exit</code>.  </li> <li>This API makes use of multi-threading to run EMU and the console simultaneously with the game. On slower hardware you might see propagation of resources take longer between what you see in the game and what you see in a function return value. For example: <code>num-tiredguests</code> might say 10, but the game says 11 for a few milliseconds longer. </li> <li><code>list-privatedonations</code> has different values than what the game displays. The array is accurate down to the second that the month changes, but then the game adds an unknown value to the final recorded value on-screen. It is not known if this is a bug or if it is adding other donations like benefactor contributions. We keep it for analysis in the future.  </li> </ul>"},{"location":"emu/emu_console/#console-commands","title":"Console Commands","text":"Command Description exit Safely close the console window. addtobudget  Deposit a discrete amount of cash into your zoo budget. getbudget Returns the current budget. setbudget  Set your current budget to a new amount. pause Pause your game from the console. resume Resume your game from the console. num-animals Return the current number of animals in your zoo. num-species Return the current number of animal species in your zoo. num-guests Return the current number of guests in your zoo. num-tiredguests Return the current number of tired guests in your zoo. num-hungryguests Return the current number of hungry guests in your zoo. num-thirstyguests Return the current number of thirsty guests in your zoo. num-rstrmguests Return the current number of guests that need to use the restroom. getzooadmcost Return the current admission cost to your zoo. Note: this is the adult ticket value. The child ticket value is not stored in memory as it is automatically calculated from the adult price divided by 2. setzooadmcost  Set the current admission cost to your zoo. See the above limitation about child ticket prices. list-admissionsincome Return a calendar listing of admissions income. list-concessionsbenefit Return a calendar listing of concessions benefits. list-zoovalue Return a calendar listing of zoo value changes over the year. list-privatedonations Return a calendar listing of private donations. list-zoorating Return a calendar listing of zoo ratings. list-constructioncosts Return a calendar listing with construction costs. list-animalpurchasecosts Return a calendar listing of animal adoption costs. devmode  Set to true to enable dev mode or false to disable."},{"location":"emu/emu_scripts/","title":"Lua Scripting","text":"<p>Lua scripting was introduced in EMU v1.0.0-alpha.3.</p>"},{"location":"emu/emu_scripts/#supported-api-calls","title":"Supported API Calls","text":"<p>EMU adds scripting support to Zoo Tycoon 1. Currently scripting is limited to the following API calls:</p> Command Description AddToZooBudget(float deposit) Deposit a discrete amount of cash into your zoo budget. Takes a float as an argument. GetZooBudget() Returns the current budget as a float. SetZooBudget(float new_budget) Set your current budget to a new amount. Takes a float as an argument. IsZooLoaded() Is a zoo currently open? Returns a boolean value. PauseGame() Pause the game. IsGamePaused() Is the game currently paused? Returns a boolean value. NumAnimals() Return the current number of animals in your zoo. Returns an integer. NumSpecies() Return the current number of animal species in your zoo. Returns an integer. NumGuests() Return the current number of guests in your zoo. Returns an integer. NumTiredGuests() Return the current number of tired guests in your zoo. Returns an integer. NumHungryGuests() Return the current number of hungry guests in your zoo. Returns an integer. NumThirstyGuests() Return the current number of thirsty guests in your zoo. Returns an integer. NumGuestsNeedRestrm() Return the current number of guests that need to use the restroom. Returns an integer. NumGuestsInFilter() Return the current number of guests in the guest filter. Returns an integer. GetZooAdmissionCost() Return the current admission cost to your zoo. Note: this is the adult ticket value. The child ticket value is not stored in memory as it is automatically calculated from the adult price divided by 2. Returns a float. SetZooAdmissionCost(float new_adm) Set the current admission cost to your zoo. See the above limitation about child ticket prices. Takes one float as an argument. AdmissionsIncomeByMonth() Retrieve an array containing 12 elements, each representing admissions income for a specific month. ConcessionsBenefitByMonth() Retrieve an array containing 12 elements, each representing the concessions benefit for a specific month. ZooValueByMonth() Retrieve an array containing 12 elements, each representing the zoo value for a specific month. PrivateDonationsByMonth() Retrieve an array containing 12 elements, each representing the private donations for a specific month. ZooRatingByMonth() Retrieve an array containing 12 elements, each representing the zoo rating for a specific month. ConstructionCostByMonth() Retrieve an array containing 12 elements, each representing the construction costs for a specific month. AnimalPurchaseCostsByMonth() Retrieve an array containing 12 elements, each representing the animal adoption costs for a specific month. _globalAnimalRating Global variable. Sets the animal rating per update. _globalZooRating Global variable. Sets the zoo rating per update. _globalGuestRating Global variable. Sets the guest rating per update."},{"location":"emu/emu_scripts/#how-to-install-emu-scripts","title":"How to Install EMU Scripts","text":"<p>Create a new folder called <code>scripts</code> inside of your main Zoo Tycoon directory: <code>C:\\Program Files (x86)\\Microsoft Games\\Zoo Tycoon</code>. Drop scripts inside of the scripts folder.</p> <p>Scripting info:</p> <ul> <li>All Lua standard libraries as of Lua 5.3 are made available for your use.  </li> <li>Lua scripts must have the <code>.emu</code> extension.  </li> <li>As of the latest EMU v1.0.0-alpha.4, EMU can load any lua scripts inside of a <code>/scripts</code> folder inside of the root Zoo Tycoon 1 folder.  </li> <li>Lua support is designed for modders to take control of the game logic by having individual scripts run on the main EMU loop. If/then statements are obviously encouraged, but be conservative with your own loops unless they are predictable and efficient. Global variables might not be effective.  </li> <li>All executing code must live inside of an <code>emu_run</code> function.  </li> </ul> <p>Example Lua Script: playground.emu <pre><code>function emu_run()\n    -- pause the game if the budget goes above $400,000\n    if GetZooBudget() &gt; 400000 and IsGamePaused() == false then\n        io.write(\"Pausing the game\")\n        PauseGame(true)\n    -- resume game if budget dips below $400,000 (maybe the console can save us here?)\n    elseif GetZooBudget() &lt;= 400000 and IsGamePaused() == true then\n        io.write(\"Resuming the game\")\n        PauseGame(false)\n    end\nend\n</code></pre></p>"},{"location":"emu/getting_started/","title":"EMU | Extensible Modding Utility","text":""},{"location":"emu/getting_started/#a-zoo-tycoon-complete-collection-api-utility-for-modders","title":"A Zoo Tycoon Complete Collection API Utility for Modders","text":"<p>Zoo Tycoon initially offered limited modding tools, leading modders to heavily depend on the game's INI configuration for modifications. This project aims to enhance modding accessibility by introducing embedded Lua scripting and expanded access to game resources that were previously unavailable.</p>"},{"location":"emu/getting_started/#compatibility","title":"Compatibility","text":"<p>This API requires the Zoo Tycoon Complete Collection, including both expansions, and a Windows XP or newer operating system with the Microsoft Visual C++ 2008 Redistributable installed.</p> <p>If you do not own the Complete Collection but own the base game and have the two expansions installed, that should work as well.</p>"},{"location":"emu/getting_started/#build-from-source","title":"Build from Source","text":"<p>The .sln file has been included for the option to build from source. This requires Microsoft Visual C++ 2008 in order to compile. Express Edition should be fine.</p>"},{"location":"emu/getting_started/#installation","title":"Installation","text":"<p>Drop the res-EMU.dll binary directly into your <code>C:\\Program Files (x86)\\Microsoft Games\\Zoo Tycoon</code> game directory.</p>"},{"location":"zt1/introduction/","title":"Zoo Tycoon 1 Config File Reference","text":"<p>Blue Fang mostly relied on a custom <code>.INI</code> file implementation to handle the game's scripting system. These files can all be found inside of the game's default install directory at <code>C:\\Program Files (x86)\\Microsoft Games\\Zoo Tycoon</code>.</p>"},{"location":"zt1/Reference/entity_ids/","title":"Entity IDs","text":"<p>Incomplete</p> <p>This page is incomplete. Pull requests welcome.</p>"},{"location":"zt1/Reference/entity_ids/#entity-ids","title":"Entity IDs","text":"<p>Zoo Tycoon 1 configuration files use integer values to map the game entities to string tables. Animals, buildings, foliage, guests can all be considered an entity--or otherwise anything that might be considered a game asset. Please take a look at the entity list below for a list of all entities and their IDs.</p>"},{"location":"zt1/Reference/entity_ids/#animals","title":"Animals","text":""},{"location":"zt1/Reference/entity_ids/#base-game-animals","title":"Base Game Animals","text":"Entity Name ID African Elephant <code>5000</code> Giant Panda <code>5001</code> Polar Bear <code>5002</code> Chimpanzee <code>5003</code> Plains Zebra <code>5004</code> Thompson's Gazelle <code>5005</code> Lion <code>5006</code> Bengal Tiger <code>5007</code> Siberian Tiger <code>5008</code> Cheetah <code>5009</code> Leopard <code>5010</code> Black Leopard <code>5011</code> Snow Leopard <code>5012</code> Clouded Leopard <code>5013</code> Jaguar <code>5014</code> Gray Wolf <code>5015</code> Grizzly Bear <code>5016</code> American Black Bear <code>5017</code> Spotted Hyena <code>5018</code> Olive Baboon <code>5019</code> Mandrill <code>5020</code> Lowland Gorilla <code>5021</code> Red Kangaroo <code>5023</code> Black Rhinoceros <code>5024</code> Common Wildebeest <code>5025</code> American Bison <code>5026</code> Ibex <code>5027</code> Okapi <code>5028</code> Moose <code>5029</code> African Buffalo <code>5030</code> Gemsbok <code>5031</code> American Bighorn <code>5032</code> Giraffe <code>5033</code> Dromedary Camel <code>5034</code> Hippopotamus <code>5035</code> Markhor <code>5036</code> Greater Flamingo <code>5037</code> Ostrich <code>5038</code> Emperor Penguin <code>5039</code> California Sea Lion <code>5040</code> Saltwater Crocodile <code>5041</code> Giant Anteater <code>5042</code> African Warthog <code>5043</code> White Siberian Tiger <code>5045</code> Triceratops <code>5046</code> Arctic Wolf <code>5048</code> Unicorn <code>5049</code> Black Buck <code>5076</code> Bongo <code>5077</code> Mountain Lion <code>5078</code> Sable Antelope <code>5079</code> Asian Black Bear <code>5080</code> Asian Elephant <code>5081</code> African Wild Dog <code>5500</code> Llama <code>5502</code> Komodo Dragon <code>5503</code> Orangutan <code>5506</code> Malayan Tapir <code>5507</code> Japanese Serow <code>5508</code> Przewalski\u2019s Horse <code>5509</code> Javan rhino <code>5511</code> Bigfoot <code>5514</code> Loch Ness Monster <code>5515</code> Mexican Gray Wolf <code>5516</code> Yeti <code>B101B026</code> Reindeer <code>5300</code> Magnet <code>5340</code>"},{"location":"zt1/Reference/entity_ids/#dinosaur-digs-animals","title":"Dinosaur Digs Animals","text":"Entity Name ID Tyrannosaurus Rex <code>5085</code> Saber-toothed cat <code>5086</code> Ankylosaurus <code>5087</code> Gallimimus <code>5088</code> Iguanodon <code>5089</code> Lambeosaurus <code>5090</code> Spinosaurus <code>5091</code> Styracosaurus <code>5092</code> Velociraptor <code>5093</code> Allosaurus <code>5094</code> Camptosaurus <code>5095</code> Caudipteryx <code>5096</code> Kentrosaurus <code>5097</code> Plesiosaurus <code>5098</code> Stegosaurus <code>5099</code> Apatosaurus <code>5325</code> Coelophysis <code>5326</code> Herrasaurus <code>5327</code> Plateosaurus <code>5328</code> Wooly Mammoth <code>5329</code> Wooly Rhino <code>5330</code> Giant Tortoise <code>5331</code> Deinosuchus <code>5332</code> Megatherium <code>5501</code> Macrauchenia <code>5505</code>"},{"location":"zt1/Reference/entity_ids/#marine-mania-animals","title":"Marine Mania Animals","text":"Entity Name ID Orca <code>5400</code> Great White Shark <code>5401</code> Bottlenose Dolphin <code>5402</code> Lion\u2019s Mane Jellyfish <code>5403</code> Elephant Seal <code>5404</code> Humpback Whale <code>5405</code> Sperm Whale <code>5406</code> Narwhal <code>5407</code> Harbor Porpoise <code>5408</code> Hammerhead Shark <code>5409</code> Tiger Shark <code>5410</code> Mako Shark <code>5411</code> Green Moray Eel <code>5412</code> Beluga <code>5413</code> Southern Sea Otter <code>5414</code> Pacific Octopus <code>5415</code> West Indian Manatee <code>5416</code> Pacific Walrus <code>5417</code> Manta Ray <code>5418</code> Green Sea Turtle <code>5419</code> Swordfish <code>5420</code> Giant Squid <code>5421</code> Bluefin Tuna <code>5422</code> Barracuda <code>5423</code> Mermaid <code>5424</code> Whale Shark <code>5504</code> Common Sawfish <code>5510</code> Bowhead Whale <code>5517</code>"},{"location":"zt1/Reference/entity_ids/#ambient-animals","title":"Ambient Animals","text":"Entity Name ID Hawk <code>5050</code> Blue Jay <code>5051</code> Crow <code>5052</code> Seagull <code>5053</code> Parrot <code>5054</code> Vulture <code>5055</code> Blue Fang Biplane <code>5082</code> Santa Claus and Reindeer <code>5083</code> Halloween Witch <code>5084</code>"},{"location":"zt1/Reference/entity_ids/#guests","title":"Guests","text":"Entity Name ID Male guest <code>9503</code> Female guest <code>9504</code> Boy guest <code>9505</code> Girl guest <code>9506</code>"},{"location":"zt1/Reference/entity_ids/#terrain","title":"Terrain","text":"Entity Name ID Savannah <code>9400</code> Grassland <code>9401</code> Deciduous Forest <code>9402</code> Coniferous Forest <code>9403</code> Boreal Forest <code>9404</code> Tropical Rainforest <code>9405</code> Scrub <code>9406</code> Highlands <code>9407</code> Tundra <code>9408</code> Desert <code>9409</code> Non-Habitat <code>9410</code> Many <code>9411</code> Null Habitat <code>9412</code> Poo <code>6062</code> Aquatic <code>9413</code> Bad-Habitat <code>9414</code>"},{"location":"zt1/Reference/entity_ids/#attributions","title":"Attributions:","text":"<p>[^1]: Thank you to Khaydar for his contributions to the animal entity list.</p>"},{"location":"zt1/Reference/scenario_files/","title":"Scenario Configuration","text":"<p>Incomplete</p> <p>This page is incomplete. Pull requests welcome.</p>"},{"location":"zt1/Reference/scenario_files/#scenario-files-scn","title":"Scenario Files <code>.scn</code>","text":"<p>Blue Fang provided official documentation for <code>.scn</code> files.  The documentation can be found at:</p> <p><code>~/Zoo Tycoon/XPACK2/&lt;unzip scenari6.ztd&gt;/scenario/example.scn</code> </p>"},{"location":"zt1/Reference/scenario_files/#desc","title":"<code>[desc]</code>","text":"Key Value Description <code>name</code> <code>&lt;int&gt;</code> Takes in the scenario ID property for the scenario name. <code>story</code> <code>&lt;string name&gt;</code> Name of story start <code>picture</code> <code>&lt;string dir&gt;</code> Directory to pictures relevant to story <code>winstory</code> <code>&lt;string name&gt;</code> Name of story win <code>winpicture</code> <code>&lt;string dir&gt;</code> Directory to pictures relevant to win condition <code>losestory</code> <code>&lt;string name&gt;</code> Name of story lose <code>losepicture</code> <code>&lt;string dir&gt;</code> Directory to pictures relevant to lose condition <code>lockedstory</code> <code>&lt;string name&gt;</code> Story locked <code>lockedpicture</code> <code>&lt;string dir&gt;</code> Directory to pictures relevant to locked condition <code>expansion</code> <code>&lt;int&gt;</code> Set the default expansion pack <code>(0 = all, 1 = zoo, 2 = dino, 3 = aqua)</code> <code>expansionLocked</code> <code>&lt;int&gt;</code> Set this to <code>0</code> to allow the user to use the expansion filter, set it to <code>1</code> to lock the scenario to the default expansion. <code>iconf</code> <code>&lt;string dir&gt;</code> Failed icon <code>iconc</code> <code>&lt;string dir&gt;</code> Completed icon <code>iconp</code> <code>&lt;string dir&gt;</code> In progress icon Example <p>From <code>example.scn</code> in the game files.</p> <pre><code>[desc]\nname = 16001\nstory = SCENARIO_EXAMPLE_START\npicture = scenario/scn01/scn01/scn01\nwinstory = SCENARIO_EXAMPLE_WIN\nwinpicture = ui/scenario/win/win\nlosestory = SCENARIO_EXAMPLE_LOSE\nlosepicture = ui/scenario/lose/lose\nlockedstory = SCENARIO_LOCK_STORY_1\nlockedpicture = ui/scenario/lock/lock\nexpansion = 0\niconf = ui/scenario/iconf/iconf\niconc = ui/scenario/iconc/iconc\niconp = ui/scenario/iconp/iconp\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#start","title":"<code>[start]</code>","text":"Key Value Description <code>savegame</code> <code>&lt;string dir&gt;</code> Filename of the save to load when the scenario starts. <code>extragoals</code> <code>&lt;string dir&gt;</code> List of config files with extra goals to load. <code>research</code> <code>&lt;research.cfg&gt;</code> Research config for the scenario. <code>marketing</code> <code>mktg.cfg</code> Marketing config for the scenario. <code>setcash</code> <code>&lt;int&gt;</code> Amount of cash to start the scenario at, replaces the value in the save. <code>addcash</code> <code>&lt;int&gt;</code> Amount of cash to add to the current amount. <code>reset</code> <code>&lt;0/1&gt;</code> Resets by killing off guests and setting counts to <code>0</code>. Same as having all of resetdate, resetanimals, resetguests, resethabitats being set to <code>1</code>. <code>resetdate</code> <code>&lt;0/1&gt;</code> Reset the date, finance info, and guests. <code>resetanimals</code> <code>&lt;0/1&gt;</code> Reset the animal numbering <code>resetguests</code> <code>&lt;0/1&gt;</code> Kill off all guests and reset the guest count <code>resethabitats</code> <code>&lt;0/1&gt;</code> Reset the habitat numbering. <code>resetfences</code> <code>&lt;0/1&gt;</code> Reset the fence strengths. <code>triggers</code> <code>trigger0</code> List of triggers to fire off on scenario start Example <pre><code>[start]\nsavegame = maps/scn01.zoo\nextragoals = scenario/example/extra.scn\nresearch = research.cfg\nmarketing = mktg.cfg\nsetcash = 1000000\naddcash = 200\nreset = 0\nresetdate = 1\nresetanimals = 1\nresetguests = 1\nresethabitats = 1\nresetfences = 0\ntriggers = trigger0\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#resume","title":"<code>[resume]</code>","text":"Key Value Description <code>triggers</code> <code>trigger0</code> List of triggers to fire off when scenario resumes Example <pre><code>[resume]\ntriggers = trigger0\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#completion","title":"<code>[completion]</code>","text":"<p>On successful completion of the scenario unlock these entities. Can be a list of entities to unlock. For a full list of entity values, please see Entity IDs.</p> Key Value Description <code>unlock</code> <code>&lt;int&gt;</code> Value of entity Example <pre><code>[completion]\nunlock = 5000 \nunlock = 5001\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#trigger0","title":"<code>[trigger0]</code>","text":"<p>Makes all animals unavailable.</p> Example <pre><code>[trigger0]\ntrulea = 4 \ntruleb = 7\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#duration","title":"<code>[duration]</code>","text":"Key Value Description <code>nummonths</code> <code>&lt;int&gt;</code> Number of months that the scenario last for. <code>display</code> <code>&lt;int&gt;</code> No info <code>text</code> <code>&lt;int&gt;</code> Key value of string to display <code>icon</code> <code>&lt;string dir&gt;</code> Directory to clock icon Example <pre><code>nummonths = 1\ndisplay = 1\ntext = 18000\nicon = ui/scenario/clock/clock\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#example","title":"<code>[example]</code>","text":"<p>Any name works above in the brackets, just add it to the <code>[goals]</code> block.</p> <p><code>rulea = #</code> | Pick a value for one of the rules listed below. <code>ruleb = #</code> | Pick a value that makes sense for rulea. <code>arga = #</code> | Optional value that depends on rulea. <code>argb=#</code> | Optional value that depends on rulea. <code>type = #</code> | Pick the type of comparison to be applied. <code>value = #</code>| Pick the value to compare the rule against. <code>text = #</code> | Insert the string ID for the rule. <code>sticky = #</code> | Pick either 0 or 1. <code>hidden = #</code> | Pick either 0 or 1. <code>optional = #</code> | Pick either 0 or 1.  <code>trulea = #</code> | Pick a value for one of the triggers. <code>truleb = #</code> | Pick a value that makes sense for trulea. <code>targa = #</code> | Optional argument for the trigger. <code>targb = #</code> | Optional argument for the trigger.  </p> <pre><code>;; Rule 0 (rulea = 0)\n;; arga (Period) - 0 monthly, 1 yearly, 2 total\n;; argb (Unused)\n; 0 food cost\n; 1 healing cost\n; 2 purchase cost\n; 3 construction cost\n; 4 admissions\n; 5 admissions income\n; 6 food income\n; 7 drink income\n; 8 donations income\n; 9 construction refund\n; 10 animal refund\n; 11 keeper wages\n; 12 guide wages\n; 13 maint wages\n; 14 net income\n; 15 zoo value\n</code></pre> <pre><code>;; Rule 1 (rulea = 1)\n;; arga (Month)\n;; argb (Unused)\n; The value returned is clamped to 0 until the month is after 'arga'.\n; 0 animal rating\n; 1 guest rating\n; 2 zoo rating\n; 3 num guests\n; 4 num animals\n; 5 num sick animals\n; 6 num species\n; 7 available cash\n</code></pre> <pre><code>;; Rule 2 (rulea = 2)\n;; arga (Animal Name ID)\n;; argb (Subtype) - 0 male, 1 female, 3 young (2, pregnant is obsolete)\n;; value - number\n; 0 match type\n; 1 match subtype\n; 2 match type and subtype\n; 3 match type or subtype\n</code></pre> <pre><code>;; Rule 3 (rulea = 3)\n;; arga (Unused or Habitat Rating)\n;; argb (Unused or Animal Name ID)\n; 0 num habitats\n; 1 num non-empty habitats\n</code></pre> <pre><code>;; Rule 4 (rulea = 4)\n;; arga (ID)\n;; argb (ID or Unused)\n;; 0 Family\n;; 1 Genus\n;; 2 Species\n;; 3 Location\n;; 4 Habitat Type\n;; 5 Family (arga) and Location (argb)\n;; 6 Genus (arga) and Location (argb)\n;; 7 Family (arga) and Habitat Type (argb)\n;; 8 Genus (arga) and Habitat Type (argb)\n;; 9 Habitat Type (arga) and Location (argb)\n;; 10 Number of boxed animals\n</code></pre> <pre><code>;; Rule 5 (rulea = 5)\n;; arga (ID or Unused)\n;; argb (Unused)\n; 0 Have a rating of 'value' for all habitats.\n; 1 Have a rating of 'value' for all family 'arga' habitats.\n; 2 Have a rating of 'value' for all genus 'arga' habitats.\n; 3 Have a rating of 'value' for all species 'arga' habitats.\n; 4 Have a rating of 'value' for all location 'arga' habitats.\n; 5 Have a rating of 'value' for all era 'arga' habitats.\n; 6 Have a rating of 'value' for all habitat type 'arga' habitats.\n</code></pre> <pre><code>;; Rule 6 (rulea = 6)\n;; arga (Number of Habitats)\n;; argb (ID or Unused)\n; 0 Have a rating of 'value' for 'arga' habitats.\n; 1 Have a rating of 'value' for 'arga' family 'argb' habitats.\n; 2 Have a rating of 'value' for 'arga' genus 'argb' habitats.\n; 3 Have a rating of 'value' for 'arga' species 'argb' habitats.\n; 4 Have a rating of 'value' for 'arga' location 'argb' habitats.\n; 5 Have a rating of 'value' for 'arga' era 'argb' habitats.\n; 6 Have a rating of 'value' for 'arga' habitat type 'argb' habitats.\n</code></pre> <pre><code>;; Rule 7 (rulea = 7)\n;; arga (Unused)\n;; argb (Unused)\n; 0 Current month value (0 is beginning of the game, 1-12)\n; 1 Current year value.\n; 2 Number of months that have passed ((12 * year) + month)\n</code></pre> <pre><code>;; Rule 8 (rulea = 8)\n;; arga (ID)\n;; argb (Unused)\n; 0 Returns value if entity type arga is available.\n</code></pre> <pre><code>;; Rule 9 (rulea = 9)\n;; arga (Unused)\n;; argb (Unused)\n;; 0 Returns number of goals in progress.\n;; 1 Returns number of goals completed.\n;; 2 Returns number of goals failed.\n</code></pre> <pre><code>;; Rule 10 (rulea = 10)\n;; arga (ID of UI element)\n;; 0 Returns value if the element is currently shown.\n;; 1 Returns value if the element is triggered.\n</code></pre> <pre><code>;; Rule 11 (rulea = 11)\n;; arga (ID of listbox UI element)\n;; value = 0 (1st listbox element)\n;; value = 1 (2nd listbox element), etc.\n;; type = 2\n</code></pre> <pre><code>; Types - Determines how the rule and value are compared.\n; 0 Goal completed when rule &gt;= value.\n; 1 Goal completed when rule &lt;  value.\n; 2 Goal completed when rule == value.\n; 3 Goal failed when rule &gt;= value.\n; 4 Goal failed when rule &lt;  value.\n; 5 Goal failed when rule == value.\n; 6 Goal completed when rule &gt;= value, else failed.\n; 7 Goal completed when rule &lt;  value, else failed.\n; 8 Goal completed when rule == value, else failed.\n</code></pre> <pre><code>; Sticky - Determines if the rule stays completed or failed once there.\n; 0 - Can be completed or failed at times, but can slip back to in progress.\n; 1 - Once completed or failed, is always completed or failed.\n</code></pre> <pre><code>; Hidden - Determines if the goal is displayed to the player.\n; 0 - Shown to the player.\n; 1 - Not shown to the player.\n</code></pre> <pre><code>; Optional - Determines if the goal must be met to complete the scenario.\n; 0 - Not optional, goal must be met.\n; 1 - Optional, goal can be failed or completed without affecting scenario.\n</code></pre> <pre><code>; Trigger 0 (trulea = 0)\n; targa (Unused)\n; targb (Unused)\n; 0 Do nothing.\n</code></pre> <pre><code>; Trigger 1 (trulea = 1)\n; targa (Resource ID of message)\n; targb (Arg passed to the message.)\n; 0 Send info message.\n; 1 Send good message.\n; 2 Send high priority message.\n</code></pre> <pre><code>; Trigger 2 (trulea = 2)\n; targa (Varies)\n; targb (Varies)\n; Rules 1,3,5,7,9 have been made obsolete but still work.\n; To fix them, replace the old rule by adding 1 - for example, 1 becomes 2.\n;  0 Popup dialog.                  (targa layout ID,  targb unused)\n;  2 Popup and click UI element.    (targa ele ID, targb layout if &gt; 0)\n;  4 Popup and disable UI element.  (targa ele ID, targb layout if &gt; 0)\n;  6 Popup and enable UI element.   (targa ele ID, targb layout if &gt; 0)\n;  8 Popup and hide UI element.     (targa ele ID, targb layout if &gt; 0)\n; 10 Popup and show UI element.     (targa ele ID, targb layout if &gt; 0)\n; 11 Popup any layout.              (targa layout ID,  targb pause flag)\n; 12 Disable block of UI elements.  (targa block, targb layout if &gt; 0)\n; 13 Enable block of UI elements.   (targa block, targb layout if &gt; 0)\n; 14 Hide block of UI elements.     (targa block, targb layout if &gt; 0)\n; 15 Show block of UI elements.     (targa block, targb layout if &gt; 0)\n; 16 Set block of UI elements.      (targa block, targb layout if &gt; 0)\n; For 16, the entries in the block are &lt;id&gt;=enable,disable,hide,show\n</code></pre> <pre><code>; Trigger 3 (trulea = 3)\n; targa (Amount of cash.)\n; targb (Unused or resource ID for message - use %s to capture dollar amount.)\n; 0 Donate cash. (Shows up in donations column.)\n; 1 Add cash. (Doesn't show up in finance sheet.)\n; 2 Set cash. (Brute force sets the cash amount.)\n</code></pre> <pre><code>; Trigger 4 (trulea = 4)\n; targa (ID of entity type)\n; targb (Unused or ID of message.)\n;  0 Make entity type available.\n;  1 Make entity type unavailable.\n;  2 Make entity type available and display UI message targb.\n;  3 Make entity type unavailable and display UI message targb.\n;  4 Make entity type available and display popup targb.\n;  5 Make entity type unavailable and display popup targb.\n;  6 Make all animals available.\n;  7 Make all animals unavailable.\n;  8 Make all things available.\n;  9 Make all things unavailable.\n</code></pre> <pre><code>; Trigger 5 (trulea = 5)\n; targa (ID of entity type.)\n; targb (ID of message - no message if &lt;= 0.)\n; 0 Add boxed animal of type targa to zoo, subtype \"m\".\n; 1 Add boxed animal of type targa to zoo, subtype \"f\".\n; 2 Add boxed animal of type targa to zoo, subtype \"y\".\n</code></pre> <pre><code>; Trigger 6 (trulea = 6)\n; targa (ID of award)\n; targb (ID of message - no message if &lt;= 0)\n; 0 Present an award to the zoo\n</code></pre> <pre><code>; Trigger 7 (trulea = 7)\n; targa (ID of sub block)\n; targb (Unused or ID of message.)\n;  0 Make entity type available.\n;  1 Make entity type unavailable.\n;  2 Make entity type available and display UI message targb.\n;  3 Make entity type unavailable and display UI message targb.\n;  4 Make entity type available and display popup targb.\n;  5 Make entity type unavailable and display popup targb.\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#goals","title":"<code>[goals]</code>","text":"<p>This category is not documented.</p> <p>Example code under this category:</p> <pre><code>goal=test\n;goal=500\n;goal=501\n;goal=602\n;goal=603\n;goal=trigger 2 example a\n;goal=trigger 2 example b\n;goal=trigger 7 example\n</code></pre> <p>Example goal after defining it above:</p> <pre><code>[test]\nrulea=6\nruleb=5\narga=3\nargb=9623\nvalue=80\nhidden=0\noptional=0\nsticky=0\ntype=0\ntext=17605\n</code></pre>"},{"location":"zt1/Reference/scenario_files/#misc-categories-and-properties","title":"Misc categories and properties","text":"<p>Have a rating of 50 for all habitats.</p> <pre><code>[500]\nrulea=5\nruleb=0\nvalue=50\ntext=17500```\n\nHave a rating of 50 for all Cat habitats.\n\n```INI\n[501]\nrulea=5\nruleb=1\narga=5206\nvalue=50\ntext=17501```\n\nHave a rating of 50 for 3 or more Tiger habitats.\n\n```INI\n[602]\nrulea=6\nruleb=2\narga=3\nargb=5107\nvalue=50\ntext=17602```\n\nHave a rating of 50 for 3 or more Bengal Tiger habitats.\n\n```INI\n[603]\nrulea=6\nruleb=3\narga=3\nargb=5007\nvalue=50\ntext=17603\n</code></pre>"},{"location":"zt1/Reference/scenery_files/","title":"Scenery Configuration","text":"<p>Incomplete</p> <p>This page is incomplete. Pull requests welcome.</p>"},{"location":"zt1/Reference/scenery_files/#scenery-documentation","title":"Scenery Documentation","text":"<p>Scenery includes buildings, foliage, rocks, terrain, toys, zoos, and other zoo utilities.</p> <p>Usually found inside an entity's <code>.ucb</code> or <code>.ai</code> file, the following tables describe attributes that can  be given to the entities mentioned. Example files can be found in a respective <code>/scenery</code> directory.</p>"},{"location":"zt1/Reference/scenery_files/#icon","title":"<code>[Icon]</code>","text":"<p><code>[Icon]</code> defines the directory for that entity's four icons.</p> Key Value Description <code>Icon</code> <code>&lt;dir&gt;</code> Directory to the icon graphic Example <pre><code>[Icon]\nIcon = objects/uforidgs/SE/SE\nIcon = objects/uforidgs/SW/SW\nIcon = objects/uforidgs/NW/NW\nIcon = objects/uforidgs/NE/NE\n</code></pre>"},{"location":"zt1/Reference/scenery_files/#characteristicsintegers","title":"<code>[Characteristics/Integers]</code>","text":"<p>This defines misc. characteristics about an entity. </p> <p>Usually found inside an entity's <code>.ucb</code> or <code>.ai</code> file. Can be found in a respective /scenery/other directory.</p> <p>This isn't comprehensive, but here are a few:</p> Key Value Description <code>cNameID</code> <code>&lt;int&gt;</code> Integer key associated with a string that gives the entity its name. Value of <code>19000</code>means the string is defined inside of the <code>.ucb</code> file. If it's a 4-digit number it's a key associated with a string in a <code>.dll</code> lang file. <code>cHelpID</code> <code>&lt;int&gt;</code> Same concept as <code>cNameID</code>: keys for strings, but this one is for tooltips. If <code>cNameID</code> is set to <code>19000</code>, ZT ignores <code>cHelpID</code>. <code>cPurchaseCost</code> <code>&lt;int&gt;</code> Price of entity <code>cFootprintX</code> <code>&lt;int&gt;</code> Size of entity footprint in X direction. Value of <code>1</code> can be used for <code>1/4</code> or <code>1/2</code> tiles, otherwise must be an even integer. <code>cFootprintY</code> <code>&lt;int&gt;</code> Size of entity footprint in Y direction. Value of <code>1</code> can be used for <code>1/4</code> or <code>1/2</code> tiles, otherwise must be an even integer. <code>cHeight</code> <code>&lt;int&gt;</code> Height of entity. Consistent with construction tool height. <code>cSelectable</code> <code>&lt;0/1&gt;</code> Can the entity be selected. <code>cNeedsConfirm</code> <code>&lt;0/1&gt;</code> Does entity need confirmation window when bulldozed. <code>cMoveable</code> <code>&lt;0/1&gt;</code> Can the entity be moved after placed. <code>cAdultChange</code> <code>&lt;int&gt;</code> How happy a guest is after using the entity. Negative values are possible if you want them to hate it. <code>cChildChange</code> <code>&lt;int&gt;</code> Same as above but specifically child guests. <code>cCommerce</code> <code>&lt;int&gt;</code> Does a user need to pay to use this entity? <code>cHabitat</code> <code>&lt;int&gt;</code> What habitat the entity belongs to. Below are possible values. <code>9414</code> makes entities unplaceable in exhibits. <code>9411</code> allows entities placeable in all exhibits. For a full list of possible values, please see Entity IDs <code>cHideBuilding</code> <code>&lt;0/1&gt;</code> Hide building or show? <code>cUsersStayOutside</code> <code>&lt;0/1&gt;</code> Prevent a user from entering entity? <code>cTimeInside</code> <code>&lt;int&gt;</code> How long should a user be inside of a building. It mmight make sense to match this value with length of sound file if provided. <code>cUsedThought</code> <code>&lt;int&gt;</code> A user's thought after using the entity. Works similar in concept to other key/value strings above. <code>cHideUser</code> <code>&lt;0/1&gt;</code> Should a user be hidden when using entity? Example <pre><code>[Characteristics/Integers]\ncPurchaseCost = 2000\ncFootprintX = 12\ncFootprintY = 6\ncHabitat = 9414\ncHeight = 3\ncHelpID = 32610\ncNameID = 2610\ncCommerce = 1\ncSelectable = 1\ncNeedsConfirm = 1\ncAdultChange = 10\ncChildChange = 15\ncEnergyChange = -100\ncHideUser = 1\ncHideBuilding = 0\ncUserStaysOutside = 0\ncCapacity = 10\ncTimeInside = 12\ncUsedThought = 8761\ncIsColorReplaced = 0\ncMoveable = 1\ncSwims = 1\n</code></pre>"},{"location":"zt1/Reference/scenery_files/#estheticbonus","title":"<code>[EstheticBonus]</code>","text":"<p><code>[EstheticBonus]</code> defines how much a guest will enjoy looking at an entity. There's a different value for each type of guest. Every value maps a guest entity type with an esthetic bonus value. Please see Entity IDs for guest entity definitions.</p>"},{"location":"zt1/Reference/scenery_files/#usage","title":"UsageExample (from `carousal.ai`)","text":"<p>Simply tweak the second <code>v</code> attribute for each to your preference.</p> <pre><code>[EstheticBonus]\n; man\nv = 9503\nv = 10\n; woman\nv = 9504\nv = 10\n; boy\nv = 9505\nv = 20\n; girl\nv = 9506\nv = 20\n</code></pre>"},{"location":"zt1/Reference/scenery_files/#satisfies","title":"<code>[Satisfies]</code>","text":"<p>This section might need another look. This category possibly assigns the entity to a subcategory type in Zoo Tycoon for various stat checks.</p> <p>An (incomplete) list of possible values:</p> <ul> <li><code>building</code></li> <li><code>familybathroom</code></li> <li><code>bathroom</code></li> <li><code>fun</code></li> </ul> Example (from `carousal.ai`): <pre><code>[Satisfies]\nbuilding\nfun\n</code></pre>"},{"location":"zt1/Reference/scenery_files/#usesound","title":"<code>[UseSound]</code>","text":"<p>Defines a playable sound for the entity.</p> Key Value Description <code>alwayson</code> <code>&lt;0/1&gt;</code> Is the sound always playing? <code>loops</code> <code>&lt;0/1&gt;</code> Does the sound loop on playback. <code>name</code> <code>&lt;string dir&gt;</code> Directory of sound file to play. <code>attenuation</code> <code>&lt;int&gt;</code> Volume of sound. Example (from `carousal.ai`) <pre><code>[UseSound]\nalwayson = 0\nloops = 1\nname = scenery/building/carousel.wav\nattenuation = 1500\n</code></pre>"}]}